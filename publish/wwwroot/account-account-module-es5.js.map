{"version":3,"sources":["webpack:///src/app/account/register/register.component.ts","webpack:///src/app/account/register/register.component.html","webpack:///src/app/account/login/login.component.ts","webpack:///src/app/account/login/login.component.html","webpack:///src/app/account/account.module.ts","webpack:///src/app/account/account-routing.module.ts"],"names":["RegisterComponent","fb","accountService","router","createRegisterForm","registerForm","group","displayName","required","email","pattern","validateEmailNotTaken","password","register","value","subscribe","response","navigateByUrl","error","console","log","errors","control","pipe","checkEmailExists","res","emailExists","onSubmit","LoginComponent","activatedRoute","returnUrl","snapshot","queryParams","createLoginForm","loginForm","login","AccountModule","routes","path","component","AccountRoutingModule","forChild"],"mappings":"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","file":"account-account-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, AsyncValidatorFn } from '@angular/forms';\nimport { AccountService } from '../account.service';\nimport { Router } from '@angular/router';\nimport { timer, of } from 'rxjs';\nimport { switchMap, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n  errors: string[];\n\n  constructor(private fb: FormBuilder, private accountService: AccountService, private router: Router) { }\n\n  ngOnInit() {\n    this.createRegisterForm();\n  }\n\n  createRegisterForm() {\n    this.registerForm = this.fb.group({\n      displayName: [null, [Validators.required]],\n      email: [null,\n        [Validators.required, Validators.pattern('^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$')],\n        [this.validateEmailNotTaken()]\n      ],\n      password: [null, [Validators.required]]\n    });\n  }\n\n  onSubmit() {\n    this.accountService.register(this.registerForm.value).subscribe(response => {\n      this.router.navigateByUrl('/shop');\n    }, error => {\n      console.log(error);\n      this.errors = error.errors;\n    });\n  }\n\n  validateEmailNotTaken(): AsyncValidatorFn {\n    return control => {\n      return timer(500).pipe(\n        switchMap(() => {\n          if (!control.value) {\n            return of(null);\n          }\n          return this.accountService.checkEmailExists(control.value).pipe(\n            map(res => {\n              return res ? { emailExists: true } : null;\n            })\n          );\n        })\n      );\n    };\n  }\n\n}\n","<div class=\"d-flex justify-content-center mt-5\">\n  <div class=\"col-3\">\n\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"text-center mb-4\">\n        <h1 class=\"h3 mb-3 font-weight-normal\">Register</h1>\n      </div>\n\n      <app-text-input formControlName=\"displayName\" [label]=\"'Display Name'\"></app-text-input>\n      <app-text-input formControlName=\"email\" [label]=\"'Email Address'\"></app-text-input>\n      <app-text-input formControlName=\"password\" [label]=\"'Password'\" [type]=\"'password'\"></app-text-input>\n\n      <ul class=\"text-danger list-unstyled\" *ngIf=\"errors\">\n        <li *ngFor=\"let error of errors\">\n          {{error}}\n        </li>\n      </ul>\n\n      <button [disabled]=\"registerForm.invalid\" class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Register</button>\n    </form>\n\n\n    <div class=\"omb_login\">\n      <div class=\"row omb_row-sm-offset-3 omb_loginOr\">\n        <div class=\"col-xs-12 col-sm-6\">\n          <hr class=\"omb_hrOr\">\n          <span class=\"omb_spanOr\">or</span>\n        </div>\n      </div>\n\n      <div class=\"row omb_row-sm-offset-3 omb_socialButtons\">\n        <div class=\"col-xs-4 col-sm-2\">\n          <a [routerLink]=\"['/routePath']\" class=\"btn btn-lg btn-block omb_btn-facebook\">\n            <i class=\"fa fa-facebook visible-xs\"></i>\n            <span class=\"hidden-xs\"></span>\n          </a>\n        </div>\n        <div class=\"col-xs-4 col-sm-2\">\n          <a [routerLink]=\"['/routePath']\" class=\"btn btn-lg btn-block omb_btn-twitter\">\n            <i class=\"fa fa-twitter visible-xs\"></i>\n            <span class=\"hidden-xs\"></span>\n          </a>\n        </div>\n        <div class=\"col-xs-4 col-sm-2\">\n          <a [routerLink]=\"['/routePath']\" class=\"btn btn-lg btn-block omb_btn-google\">\n            <i class=\"fa fa-google-plus visible-xs\"></i>\n            <span class=\"hidden-xs\"></span>\n          </a>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AccountService } from '../account.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  returnUrl: string;\n\n  constructor(private accountService: AccountService, private router: Router, private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.returnUrl = this.activatedRoute.snapshot.queryParams.returnUrl || '/shop';\n    this.createLoginForm();\n  }\n\n  createLoginForm() {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators\n        .pattern('^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$')]),\n      password: new FormControl('', Validators.required)\n    });\n  }\n\n  onSubmit() {\n    this.accountService.login(this.loginForm.value).subscribe(() => {\n      this.router.navigateByUrl(this.returnUrl);\n    }, error => {\n      console.log(error);\n    });\n  }\n\n}\n","<div class=\"d-flex justify-content-center mt-5\">\n  <div class=\"col-3\">\n\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"text-center mb-4\">\n        <h1 class=\"h3 mb-3 font-weight-normal\">Login</h1>\n      </div>\n\n      <app-text-input formControlName=\"email\" [label]=\"'Email Address'\"></app-text-input>\n      <app-text-input formControlName=\"password\" [label]=\"'Password'\" [type]=\"'password'\"></app-text-input>\n\n      <button [disabled]=\"loginForm.invalid\" class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\n      <div class=\"info\">\n        <a [routerLink]=\"['/']\">Forgot password ?</a>\n      </div>\n    </form>\n\n    <div class=\"omb_login\">\n      <div class=\"row omb_row-sm-offset-3 omb_loginOr\">\n        <div class=\"col-xs-12 col-sm-6\">\n          <hr class=\"omb_hrOr\">\n          <span class=\"omb_spanOr\">or</span>\n        </div>\n      </div>\n\n      <div class=\"row omb_row-sm-offset-3 omb_socialButtons\">\n        <div class=\"col-xs-4 col-sm-2\">\n          <a [routerLink]=\"['/routePath']\" class=\"btn btn-lg btn-block omb_btn-facebook\">\n            <i class=\"fa fa-facebook visible-xs\"></i>\n            <span class=\"hidden-xs\"></span>\n          </a>\n        </div>\n        <div class=\"col-xs-4 col-sm-2\">\n          <a [routerLink]=\"['/routePath']\" class=\"btn btn-lg btn-block omb_btn-twitter\">\n            <i class=\"fa fa-twitter visible-xs\"></i>\n            <span class=\"hidden-xs\"></span>\n          </a>\n        </div>\n        <div class=\"col-xs-4 col-sm-2\">\n          <a [routerLink]=\"['/routePath']\" class=\"btn btn-lg btn-block omb_btn-google\">\n            <i class=\"fa fa-google-plus visible-xs\"></i>\n            <span class=\"hidden-xs\"></span>\n          </a>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AccountRoutingModule } from './account-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [LoginComponent, RegisterComponent],\n  imports: [\n    CommonModule,\n    AccountRoutingModule,\n    SharedModule\n  ]\n})\nexport class AccountModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\nconst routes: Routes = [\n  {path: 'login', component: LoginComponent},\n  {path: 'register', component: RegisterComponent}\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class AccountRoutingModule { }\n"]}