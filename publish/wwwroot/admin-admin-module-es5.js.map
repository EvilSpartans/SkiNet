{"version":3,"sources":["webpack:///src/app/admin/admin-routing.module.ts","webpack:///src/app/admin/edit-product-photos/edit-product-photos.component.ts","webpack:///src/app/admin/edit-product-photos/edit-product-photos.component.html","webpack:///src/app/admin/edit-product-form/edit-product-form.component.html","webpack:///src/app/admin/edit-product-form/edit-product-form.component.ts","webpack:///src/app/admin/edit-product/edit-product.component.ts","webpack:///src/app/admin/edit-product/edit-product.component.html","webpack:///src/app/admin/admin.component.html","webpack:///src/app/admin/admin.component.ts","webpack:///src/app/shared/models/product.ts","webpack:///src/app/admin/admin.module.ts","webpack:///src/app/admin/admin.service.ts"],"names":["routes","path","component","data","breadcrumb","AdminRoutingModule","forChild","EditProductPhotosComponent","adminService","toast","progress","addPhotoMode","file","uploadImage","product","id","subscribe","event","type","UploadProgress","Math","round","loaded","total","Response","body","setTimeout","error","errors","photoId","deleteProductPhoto","photoIndex","photos","findIndex","x","splice","console","log","setMainPhoto","EditProductFormComponent","route","router","snapshot","url","updatedProduct","price","updateProduct","paramMap","get","response","navigate","newProduct","createProduct","onSubmit","updatePrice","EditProductComponent","shopService","productFormValues","brands","getBrands","types","getTypes","results","loadProduct","getProduct","productBrandId","find","name","productBrand","productTypeId","productType","AdminComponent","shopParams","getShopParams","getProducts","useCache","products","totalCount","count","params","pageNumber","setShopParams","deleteProduct","p","ProductFormValues","init","description","Object","assign","AdminModule","AdminService","http","baseUrl","apiUrl","post","put","formData","FormData","append","reportProgress","observe","productId"],"mappings":"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","file":"admin-admin-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {AdminComponent} from './admin.component';\nimport {RouterModule, Routes} from '@angular/router';\nimport {EditProductComponent} from './edit-product/edit-product.component';\n\nconst routes: Routes = [\n  {path: '', component: AdminComponent},\n  {path: 'create', component: EditProductComponent, data: {breadcrumb: 'Create'}},\n  {path: 'edit/:id', component: EditProductComponent, data: {breadcrumb: 'Edit'}}\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class AdminRoutingModule { }\n","import {Component, Input, OnInit} from '@angular/core';\nimport {IPhoto, IProduct} from '../../shared/models/product';\nimport {AdminService} from '../admin.service';\nimport {ToastrService} from 'ngx-toastr';\nimport {HttpEvent, HttpEventType} from '@angular/common/http';\n\n@Component({\n  selector: 'app-edit-product-photos',\n  templateUrl: './edit-product-photos.component.html',\n  styleUrls: ['./edit-product-photos.component.scss']\n})\nexport class EditProductPhotosComponent implements OnInit {\n  @Input() product: IProduct;\n  progress = 0;\n  addPhotoMode = false;\n\n  constructor(private adminService: AdminService, private toast: ToastrService) { }\n\n  ngOnInit(): void {\n  }\n\n  addPhotoModeToggle() {\n    this.addPhotoMode = !this.addPhotoMode;\n  }\n\n  uploadFile(file: File) {\n    this.adminService.uploadImage(file, this.product.id).subscribe((event: HttpEvent<any>) => {\n      switch (event.type) {\n        case HttpEventType.UploadProgress:\n          this.progress = Math.round(event.loaded / event.total * 100);\n          break;\n        case HttpEventType.Response:\n          this.product = event.body;\n          setTimeout(() => {\n            this.progress = 0;\n            this.addPhotoMode = false;\n          }, 1500);\n      }\n    }, error => {\n      if (error.errors) {\n        this.toast.error(error.errors[0]);\n      } else {\n        this.toast.error('Problem uploading image');\n      }\n      this.progress = 0;\n    });\n  }\n\n  deletePhoto(photoId: number) {\n    this.adminService.deleteProductPhoto(photoId, this.product.id).subscribe(() => {\n      const photoIndex = this.product.photos.findIndex(x => x.id === photoId);\n      this.product.photos.splice(photoIndex, 1);\n    }, error => {\n      this.toast.error('Problem deleting photo');\n      console.log(error);\n    });\n  }\n\n  setMainPhoto(photoId: number) {\n    this.adminService.setMainPhoto(photoId, this.product.id).subscribe((product: IProduct) => {\n      this.product = product;\n    });\n  }\n\n\n}\n","<div class=\"py-5\">\n  <div class=\"container\">\n    <ng-container *ngIf=\"!addPhotoMode\">\n      <div class=\"d-flex justify-content-between mb-3\">\n        <h3>Product Photos</h3>\n        <button class=\"btn btn-primary\" (click)=\"addPhotoModeToggle()\">\n          Add New Photo\n        </button>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-3\" *ngFor=\"let photo of product?.photos\">\n          <div class=\"card\">\n            <img class=\"card-img-top\" width=\"100%\" height=\"225\" src=\"{{photo.pictureUrl}}\" alt=\"{{photo.fileName}}\"/>\n            <div class=\"btn-group\" style=\"width: 100%\">\n              <button type=\"button\"\n                      (click)=\"setMainPhoto(photo.id)\"\n                      [disabled]=\"photo.isMain\"\n                      class=\"{{photo.isMain ? 'btn btn-success' : 'btn btn-outline-success'}}\"\n                      style=\"width: 50%\">Set Main\n              </button>\n              <button\n                (click)=\"deletePhoto(photo.id)\"\n                type=\"button\"\n                [disabled]=\"photo.isMain\"\n                class=\"btn btn-outline-danger\"\n                style=\"width: 50%\"><i class=\"fa fa-trash\"></i>      \n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"addPhotoMode\">\n      <div class=\"d-flex justify-content-between mb-3\">\n        <h3 class=\"text-primary\">Add new product image</h3>\n        <button class=\"btn btn-outline-secondary\" (click)=\"addPhotoModeToggle()\">Cancel</button>\n      </div>\n      <div class=\"progress form-group\" *ngIf=\"progress > 0\">\n        <div class=\"progress-bar progress-bar-striped bg-success\" role=\"progressbar\" [style.width.%]=\"progress\">\n          {{progress}}%\n        </div>\n      </div>\n      <app-photo-widget (addFile)=\"uploadFile($event)\"></app-photo-widget>\n    </ng-container>\n  </div>\n</div>\n","<form #productForm=\"ngForm\" (ngSubmit)=\"onSubmit(productForm.valid && productForm.value)\">\n  <div class=\"form-row\">\n    <div class=\"form-group col-md-6\">\n      <label for=\"name\">Product Name</label>\n      <input\n        [ngClass]=\"{'is-invalid': name.invalid && (name.dirty || name.touched)}\"\n        required\n        type=\"text\"\n        class=\"form-control\"\n        id=\"name\"\n        placeholder=\"Product Name\"\n        name=\"name\"\n        #name=\"ngModel\"\n        [(ngModel)]=\"product.name\"\n      >\n      <div *ngIf=\"name.invalid && (name.dirty || name.touched)\" class=\"invalid-feedback\">\n        <div *ngIf=\"name.errors.required\">\n          Product Name is required\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group col-md-6\">\n      <label for=\"price\">Price</label>\n      <input\n        [ngClass]=\"{'is-invalid': price.invalid && (price.dirty || price.touched)}\"\n        required\n        type=\"text\"\n        class=\"form-control\"\n        id=\"price\"\n        placeholder=\"Price\"\n        currencyMask\n        name=\"price\"\n        #price=\"ngModel\"\n        pattern=\"^\\$?([0-9]{1,3},([0-9]{3},)*[0-9]{3}|[0-9]+)(\\.[0-9][0-9])?$\"\n        min=\"0.01\"\n        [ngModel]=\"+product.price | number: '1.2-2'\"\n        (ngModelChange)=\"updatePrice(+$event)\"\n      >\n      <div *ngIf=\"price.invalid && (price.dirty || price.touched)\" class=\"invalid-feedback\">\n        <div *ngIf=\"price.errors.required\">\n          Product price is required\n        </div>\n        <div *ngIf=\"price.errors.pattern\">\n          Product price needs to be decimal value\n        </div>\n        <div *ngIf=\"price.errors.min\">\n          Product price must be greater than zero\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"form-row\">\n    <div class=\"form-group col-md-12\">\n      <label for=\"description\">Description</label>\n      <textarea\n        [ngClass]=\"{'is-invalid': description.invalid && (description.dirty || description.touched)}\"\n        required\n        #description=\"ngModel\"\n        class=\"form-control\"\n        id=\"description\"\n        [(ngModel)]=\"product.description\"\n        name=\"description\"\n        rows=\"3\"></textarea>\n      <div *ngIf=\"description.invalid && (description.dirty || description.touched)\" class=\"invalid-feedback\">\n        <div *ngIf=\"description.errors.required\">\n          Product price is required\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"form-row\">\n    <div class=\"form-group col-md-6\">\n      <label for=\"brand\">Brand</label>\n      <select id=\"brand\" class=\"form-control\" name=\"productBrandId\" [(ngModel)]=\"product.productBrandId\" required>\n        <option *ngFor=\"let brand of brands\"\n                [selected]=\"product.productBrandId === brand.id\"\n                [ngValue]=\"brand.id\">{{brand.name}}</option>\n      </select>\n    </div>\n    <div class=\"form-group col-md-6\">\n      <label for=\"type\">Type</label>\n      <select id=\"type\" class=\"form-control\" name=\"productTypeId\" [(ngModel)]=\"product.productTypeId\" required>\n        <option *ngFor=\"let type of types\"\n                [selected]=\"product.productTypeId === type.id\"\n                [ngValue]=\"type.id\">{{type.name}}</option>\n      </select>\n    </div>\n  </div>\n  <button [disabled]=\"!productForm.valid\" type=\"submit\" class=\"btn btn-primary my-3 float-right\">Submit</button>\n</form>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {IProduct, ProductFormValues} from '../../shared/models/product';\nimport {IBrand} from '../../shared/models/brand';\nimport {IType} from '../../shared/models/productType';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {AdminService} from '../admin.service';\n\n@Component({\n  selector: 'app-edit-product-form',\n  templateUrl: './edit-product-form.component.html',\n  styleUrls: ['./edit-product-form.component.scss']\n})\nexport class EditProductFormComponent implements OnInit {\n  @Input() product: ProductFormValues;\n  @Input() brands: IBrand[];\n  @Input() types: IType[];\n\n  constructor(private route: ActivatedRoute, private adminService: AdminService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(product: ProductFormValues) {\n    if (this.route.snapshot.url[0].path === 'edit') {\n      const updatedProduct = {...this.product, ...product, price: +product.price};\n      this.adminService.updateProduct(updatedProduct, +this.route.snapshot.paramMap.get('id')).subscribe((response: any) => {\n        this.router.navigate(['/admin']);\n      });\n    } else {\n      const newProduct = {...product, price: +product.price};\n      this.adminService.createProduct(newProduct).subscribe((response: any) => {\n        this.router.navigate(['/admin']);\n      });\n    }\n  }\n\n  updatePrice(event: any) {\n    this.product.price = event;\n  }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {AdminService} from '../admin.service';\nimport {ShopService} from '../../shop/shop.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {IProduct, ProductFormValues} from '../../shared/models/product';\nimport {IBrand} from '../../shared/models/brand';\nimport {IType} from '../../shared/models/productType';\nimport {forkJoin} from 'rxjs';\n\n@Component({\n  selector: 'app-edit-product',\n  templateUrl: './edit-product.component.html',\n  styleUrls: ['./edit-product.component.scss']\n})\nexport class EditProductComponent implements OnInit {\n  product: IProduct;\n  productFormValues: ProductFormValues;\n  brands: IBrand[];\n  types: IType[];\n\n  constructor(private adminService: AdminService,\n              private shopService: ShopService,\n              private route: ActivatedRoute,\n              private router: Router) {\n    this.productFormValues = new ProductFormValues();\n  }\n\n  ngOnInit(): void {\n    const brands = this.getBrands();\n    const types = this.getTypes();\n\n    forkJoin([types, brands]).subscribe(results => {\n      this.types = results[0];\n      this.brands = results[1];\n    }, error => {\n      console.log(error);\n    }, () => {\n      if (this.route.snapshot.url[0].path === 'edit') {\n        this.loadProduct();\n      }\n    });\n  }\n\n\n\n  loadProduct() {\n    this.shopService.getProduct(+this.route.snapshot.paramMap.get('id')).subscribe((response: any) => {\n      const productBrandId = this.brands && this.brands.find(x => x.name === response.productBrand).id;\n      const productTypeId = this.types && this.types.find(x => x.name === response.productType).id;\n      this.product = response;\n      this.productFormValues = {...response, productBrandId, productTypeId};\n    });\n  }\n\n  getBrands() {\n    return this.shopService.getBrands();\n  }\n\n  getTypes() {\n    return this.shopService.getTypes();\n  }\n\n\n}\n","<section class=\"product-edit mt-5\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <div class=\"tab-panel\">\n          <tabset class=\"product-tabset\">\n            <tab heading=\"Edit Product\">\n              <div class=\"col-lg-8\">\n                <app-edit-product-form [product]=\"productFormValues\" [brands]=\"brands\" [types]=\"types\"></app-edit-product-form>\n              </div>\n            </tab>\n            <tab heading=\"Edit Photos\">\n              <app-edit-product-photos [product]=\"product\"></app-edit-product-photos>\n            </tab>\n          </tabset>\n        </div>\n      </div>\n\n    </div>\n  </div>\n</section>\n","<section class=\"admin-page\" *ngIf=\"products\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-lg-12\">\n        <div class=\"d-flex justify-content-between my-3\">\n          <header class=\"h2\">Product List</header>\n          <button [routerLink]=\"['/admin/create']\" class=\"btn btn-outline-success\">Create new product</button>\n        </div>\n\n        <app-paging-header\n          [totalCount]=\"totalCount\"\n          [pageSize]=\"this.shopParams.pageSize\"\n          [pageNumber]=\"this.shopParams.pageNumber\"\n        ></app-paging-header>\n\n        <div class=\"table-responsive\">\n          <table class=\"table\">\n            <thead>\n            <tr>\n              <th scope=\"col\">\n                <div class=\"p-2\">Id</div>\n              </th>\n              <th scope=\"col\">\n                <div class=\"p-2 text-uppercase\">Product</div>\n              </th>\n              <th scope=\"col\">\n                <div class=\"py-2 text-uppercase\">Name</div>\n              </th>\n              <th scope=\"col\">\n                <div class=\"p-2 px-3 text-uppercase\">Price</div>\n              </th>\n              <th scope=\"col\">\n                <div class=\"p-2 px-3 text-uppercase\">Edit</div>\n              </th>\n              <th scope=\"col\">\n                <div class=\"p-2 px-3 text-uppercase\">Delete</div>\n              </th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let product of products\">\n              <td class=\"align-middle\">{{product.id}}</td>\n              <td>\n                <div class=\"p-2\">\n                  <img src=\"{{product.pictureUrl || '/assets/images/placeholder.png'}}\" alt=\"{{product.name}}\" class=\"img-fluid\" style=\"max-height: 50px\">\n                </div>\n              </td>\n              <th class=\"align-middle\"><h5>{{product.name}}</h5></th>\n              <td class=\"align-middle\">{{product.price | currency}}</td>\n              <td class=\"align-middle\"><button [routerLink]=\"['edit', product.id]\" class=\"btn btn-warning\">Edit</button></td>\n              <td class=\"align-middle\"><button (click)=\"deleteProduct(product.id)\" class=\"btn btn-danger\">Delete</button></td>\n            </tr>\n            </tbody>\n          </table>\n        </div>\n        <div class=\"d-flex justify-content-center\" *ngIf=\"totalCount > 0\">\n          <app-pager\n            [pageSize]=\"shopParams.pageSize\"\n            [pageNumber]=\"shopParams.pageNumber\"\n            [totalCount]=\"totalCount\"\n            (pageChanged)=\"onPageChanged($event)\"\n          ></app-pager>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import {Component, OnInit} from '@angular/core';\nimport {ShopParams} from '../shared/models/shopParams';\nimport {IProduct} from '../shared/models/product';\nimport {ShopService} from '../shop/shop.service';\nimport {AdminService} from './admin.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss']\n})\nexport class AdminComponent implements OnInit {\n  products: IProduct[];\n  totalCount: number;\n  shopParams: ShopParams;\n\n  constructor(private shopService: ShopService, private adminService: AdminService) {\n    this.shopParams = this.shopService.getShopParams();\n  }\n\n  ngOnInit(): void {\n    this.getProducts();\n  }\n\n  getProducts(useCache = false) {\n    this.shopService.getProducts(useCache).subscribe(response => {\n      this.products = response.data;\n      this.totalCount = response.count;\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  onPageChanged(event: any) {\n    const params = this.shopService.getShopParams();\n    if (params.pageNumber !== event) {\n      params.pageNumber = event;\n      this.shopService.setShopParams(params);\n      this.getProducts(true);\n    }\n  }\n\n  deleteProduct(id: number) {\n    this.adminService.deleteProduct(id).subscribe((response: any) => {\n      this.products.splice(this.products.findIndex(p => p.id === id), 1);\n      this.totalCount--;\n    });\n  }\n}\n","export interface IProduct {\n    id: number;\n    name: string;\n    description: string;\n    price: number;\n    pictureUrl: string;\n    productType: string;\n    productBrand: string;\n    photos: IPhoto[];\n}\n\nexport interface IProductToCreate {\n  name: string;\n  description: string;\n  price: number;\n  pictureUrl?: string;\n  productTypeId: number;\n  productBrandId: number;\n}\n\nexport class ProductFormValues implements IProductToCreate {\n  name = '';\n  description = '';\n  price = 0;\n  productBrandId: number;\n  productTypeId: number;\n\n  constructor(init?: ProductFormValues) {\n    Object.assign(this, init);\n  }\n}\n\nexport interface IPhoto {\n  id: number;\n  pictureUrl: string;\n  fileName: string;\n  isMain: boolean;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AdminComponent } from './admin.component';\nimport { EditProductComponent } from './edit-product/edit-product.component';\nimport {SharedModule} from '../shared/shared.module';\nimport {AdminRoutingModule} from './admin-routing.module';\nimport { EditProductFormComponent } from './edit-product-form/edit-product-form.component';\nimport { EditProductPhotosComponent } from './edit-product-photos/edit-product-photos.component';\n\n@NgModule({\n  declarations: [AdminComponent, EditProductComponent, EditProductFormComponent, EditProductPhotosComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    AdminRoutingModule\n  ]\n})\nexport class AdminModule { }\n","import {Injectable} from '@angular/core';\nimport {environment} from '../../environments/environment';\nimport {ProductFormValues} from '../shared/models/product';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n  baseUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) {\n  }\n\n  createProduct(product: ProductFormValues) {\n    return this.http.post(this.baseUrl + 'products', product);\n  }\n\n  updateProduct(product: ProductFormValues, id: number) {\n    return this.http.put(this.baseUrl + 'products/' + id, product);\n  }\n\n  deleteProduct(id: number) {\n    return this.http.delete(this.baseUrl + 'products/' + id);\n  }\n\n  uploadImage(file: File, id: number) {\n    const formData = new FormData();\n    formData.append('photo', file, 'image.png');\n    return this.http.put(this.baseUrl + 'products/' + id + '/photo', formData, {\n      reportProgress: true,\n      observe: 'events'\n    });\n  }\n\n  deleteProductPhoto(photoId: number, productId: number) {\n    return this.http.delete(this.baseUrl + 'products/' + productId + '/photo/' + photoId);\n  }\n\n  setMainPhoto(photoId: number, productId: number) {\n    return this.http.post(this.baseUrl + 'products/' + productId + '/photo/' + photoId, {});\n  }\n}\n"]}